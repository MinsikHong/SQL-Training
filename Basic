SELECT * FROM Customers;

However, to be compliant with the ANSI standard, they all support at least the major commands (such as SELECT, UPDATE, DELETE, INSERT, WHERE) in a similar manner.

Some of The Most Important SQL Commands:
SELECT - extracts data from a database
UPDATE - updates data in a database
DELETE - deletes data from a database
INSERT INTO - inserts new data into a database
CREATE DATABASE - creates a new database
ALTER DATABASE - modifies a database
CREATE TABLE - creates a new table
ALTER TABLE - modifies a table
DROP TABLE - deletes a table
CREATE INDEX - creates an index (search key)
DROP INDEX - deletes an index
SELECT CustomerName, City FROM Customers;

The following SQL statement selects all the columns from the "Customers" table:
Example:
SELECT * FROM Customers;

The following SQL statement selects only the DISTINCT values from the "Country" column in the "Customers" table:
Example:
SELECT DISTINCT Country FROM Customers;

The following SQL statement lists the number of different (distinct) customer countries:
Example:
SELECT COUNT(DISTINCT Country) FROM Customers;

The following SQL statement selects all the customers from the country "Mexico", in the "Customers" table:

Example:
SELECT * FROM Customers
WHERE Country='Mexico';        ('Mexico' means the column that has letter 'Mexico')
or
SELECT * FROM Customers
WHERE CustomerID=1;

Operators in The WHERE Clause
The following operators can be used in the WHERE clause:

Operator	Description	Example:
=	Equal	
>	Greater than	
<	Less than	
>=	Greater than or equal	
<=	Less than or equal	
<>	Not equal. Note: In some versions of SQL this operator may be written as !=	
BETWEEN	Between a certain range	
LIKE	Search for a pattern	
IN	To specify multiple possible values for a column




The following SQL statement selects all fields from "Customers" where country is "Germany" AND city is "Berlin":
Example:
SELECT * FROM Customers
WHERE Country='Germany' AND City='Berlin';

The following SQL statement selects all fields from "Customers" where city is "Berlin" OR "M端nchen":
Example:
SELECT * FROM Customers
WHERE City='Berlin' OR City='M端nchen';

The following SQL statement selects all fields from "Customers" where country is "Germany" OR "Spain":
Example:
SELECT * FROM Customers
WHERE Country='Germany' OR Country='Spain';

The following SQL statement selects all fields from "Customers" where country is NOT "Germany":
Example:
SELECT * FROM Customers
WHERE NOT Country='Germany';

The following SQL statement selects all fields from "Customers" where country is "Germany" AND city must be "Berlin" OR "M端nchen" (use parenthesis to form complex expressions):
Example:
SELECT * FROM Customers
WHERE Country='Germany' AND (City='Berlin' OR City='M端nchen');

The following SQL statement selects all fields from "Customers" where country is NOT "Germany" and NOT "USA":
Example:
SELECT * FROM Customers
WHERE NOT Country='Germany' AND NOT Country='USA';

by the Chapter: SQL AND, OR and NOT Operators

Select all records where the City column has the value 'Berlin' and the PostalCode column has the value 12209.
SELECT * FROM Customers WHERE City='Berlin' AND PostalCode=12209;


ORDER BY Example (The ORDER BY keyword sorts the records in ascending order by default)
The following SQL statement selects all customers from the "Customers" table, sorted by the "Country" column:
SELECT * FROM Customers ORDER BY Country;

The following SQL statement selects all customers from the "Customers" table, sorted DESCENDING by the "Country" column:
SELECT * FROM Customers ORDER BY Country DESC;

ORDER BY Several Columns Example
The following SQL statement selects all customers from the "Customers" table, sorted by the "Country" and the "CustomerName" column. This means that it orders by Country, but if some rows have the same Country, it orders them by CustomerName:
SELECT * FROM Customers ORDER BY Country, CustomerName;















